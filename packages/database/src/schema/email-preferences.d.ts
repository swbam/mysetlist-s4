export declare const emailFrequencyEnum: import("drizzle-orm/pg-core").PgEnum<["immediately", "daily", "weekly", "never"]>;
export declare const emailTypeEnum: import("drizzle-orm/pg-core").PgEnum<["show_reminders", "new_shows", "setlist_updates", "weekly_digest", "marketing", "all"]>;
export declare const queuedEmailTypeEnum: import("drizzle-orm/pg-core").PgEnum<["welcome", "show_reminder", "new_show", "setlist_update", "weekly_digest", "password_reset", "email_verification"]>;
export declare const emailStatusEnum: import("drizzle-orm/pg-core").PgEnum<["queued", "sent", "delivered", "bounced", "failed", "spam"]>;
export declare const emailPreferences: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "email_preferences";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "email_preferences";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "email_preferences";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        emailEnabled: import("drizzle-orm/pg-core").PgColumn<{
            name: "email_enabled";
            tableName: "email_preferences";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        showReminders: import("drizzle-orm/pg-core").PgColumn<{
            name: "show_reminders";
            tableName: "email_preferences";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        showReminderFrequency: import("drizzle-orm/pg-core").PgColumn<{
            name: "show_reminder_frequency";
            tableName: "email_preferences";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "immediately" | "daily" | "weekly" | "never";
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: ["immediately", "daily", "weekly", "never"];
            baseColumn: never;
        }, {}, {}>;
        newShowNotifications: import("drizzle-orm/pg-core").PgColumn<{
            name: "new_show_notifications";
            tableName: "email_preferences";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        newShowFrequency: import("drizzle-orm/pg-core").PgColumn<{
            name: "new_show_frequency";
            tableName: "email_preferences";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "immediately" | "daily" | "weekly" | "never";
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: ["immediately", "daily", "weekly", "never"];
            baseColumn: never;
        }, {}, {}>;
        setlistUpdates: import("drizzle-orm/pg-core").PgColumn<{
            name: "setlist_updates";
            tableName: "email_preferences";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        setlistUpdateFrequency: import("drizzle-orm/pg-core").PgColumn<{
            name: "setlist_update_frequency";
            tableName: "email_preferences";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "immediately" | "daily" | "weekly" | "never";
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: ["immediately", "daily", "weekly", "never"];
            baseColumn: never;
        }, {}, {}>;
        weeklyDigest: import("drizzle-orm/pg-core").PgColumn<{
            name: "weekly_digest";
            tableName: "email_preferences";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        marketingEmails: import("drizzle-orm/pg-core").PgColumn<{
            name: "marketing_emails";
            tableName: "email_preferences";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        securityEmails: import("drizzle-orm/pg-core").PgColumn<{
            name: "security_emails";
            tableName: "email_preferences";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "email_preferences";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "email_preferences";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const emailUnsubscribes: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "email_unsubscribes";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "email_unsubscribes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "email_unsubscribes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        emailType: import("drizzle-orm/pg-core").PgColumn<{
            name: "email_type";
            tableName: "email_unsubscribes";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "new_shows" | "show_reminders" | "setlist_updates" | "weekly_digest" | "marketing" | "all";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: ["show_reminders", "new_shows", "setlist_updates", "weekly_digest", "marketing", "all"];
            baseColumn: never;
        }, {}, {}>;
        unsubscribedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "unsubscribed_at";
            tableName: "email_unsubscribes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        token: import("drizzle-orm/pg-core").PgColumn<{
            name: "token";
            tableName: "email_unsubscribes";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const emailQueue: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "email_queue";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "email_queue";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "email_queue";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        emailType: import("drizzle-orm/pg-core").PgColumn<{
            name: "email_type";
            tableName: "email_queue";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "weekly_digest" | "welcome" | "show_reminder" | "new_show" | "setlist_update" | "password_reset" | "email_verification";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: ["welcome", "show_reminder", "new_show", "setlist_update", "weekly_digest", "password_reset", "email_verification"];
            baseColumn: never;
        }, {}, {}>;
        emailData: import("drizzle-orm/pg-core").PgColumn<{
            name: "email_data";
            tableName: "email_queue";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        scheduledFor: import("drizzle-orm/pg-core").PgColumn<{
            name: "scheduled_for";
            tableName: "email_queue";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        sentAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "sent_at";
            tableName: "email_queue";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        failedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "failed_at";
            tableName: "email_queue";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        attempts: import("drizzle-orm/pg-core").PgColumn<{
            name: "attempts";
            tableName: "email_queue";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        maxAttempts: import("drizzle-orm/pg-core").PgColumn<{
            name: "max_attempts";
            tableName: "email_queue";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        lastError: import("drizzle-orm/pg-core").PgColumn<{
            name: "last_error";
            tableName: "email_queue";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "email_queue";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "email_queue";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const emailLogs: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "email_logs";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "email_logs";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "email_logs";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        emailType: import("drizzle-orm/pg-core").PgColumn<{
            name: "email_type";
            tableName: "email_logs";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        subject: import("drizzle-orm/pg-core").PgColumn<{
            name: "subject";
            tableName: "email_logs";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        recipient: import("drizzle-orm/pg-core").PgColumn<{
            name: "recipient";
            tableName: "email_logs";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "email_logs";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "failed" | "queued" | "sent" | "delivered" | "bounced" | "spam";
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: ["queued", "sent", "delivered", "bounced", "failed", "spam"];
            baseColumn: never;
        }, {}, {}>;
        resendId: import("drizzle-orm/pg-core").PgColumn<{
            name: "resend_id";
            tableName: "email_logs";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        sentAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "sent_at";
            tableName: "email_logs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        deliveredAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "delivered_at";
            tableName: "email_logs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        openedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "opened_at";
            tableName: "email_logs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        clickedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "clicked_at";
            tableName: "email_logs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "email_logs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "updated_at";
            tableName: "email_logs";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
//# sourceMappingURL=email-preferences.d.ts.map